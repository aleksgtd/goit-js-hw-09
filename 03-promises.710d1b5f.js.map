{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","onSubmit","e","preventDefault","onMultipleFnCalls","delay","Number","elements","value","step","amount","positionArg","delayArg","i","onCall","setTimeout","createPromise","then","position","console","log","catch","Promise","resolve","reject","Math","random","addEventListener"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAASC,GAChBA,EAAEC,iBAQFC,EANa,CACXC,MAAOC,OAAOR,EAAKS,SAASF,MAAMG,OAClCC,KAAMH,OAAOR,EAAKS,SAASE,KAAKD,OAChCE,OAAQJ,OAAOR,EAAKS,SAASG,OAAOF,SAMxC,SAASJ,GAAkB,MAAEC,EAAF,KAASI,EAAT,OAAeC,IACpCC,IAAAA,EACAC,EAEC,IAAA,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAMhCC,EALAH,EAAcE,EACdD,EAAWP,EAAQI,GAAQI,EAAI,IAQnC,SAASC,EAAOH,EAAaC,GAC3BG,WAAW,KAETC,EAAcL,EAAaC,GACxBK,KAAK,EAAGC,SAAAA,EAAUb,MAAAA,MACjBc,QAAQC,qCAAqCF,UAAiBb,eAE/DgB,MAAM,EAAGH,SAAAA,EAAUb,MAAAA,MAClBc,QAAQC,oCAAoCF,UAAiBb,gBAEhEO,GAGL,SAASI,EAAcE,EAAUb,GACxB,OAAA,IAAIiB,QAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,IAGpCH,EAAQ,CAAEL,SAAAA,EAAUb,MAAAA,IAGtBmB,EAAO,CAAEN,SAAAA,EAAUb,MAAAA,MAjDvBP,EAAK6B,iBAAiB,SAAU1B","file":"03-promises.710d1b5f.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const data = {\n    delay: Number(form.elements.delay.value),\n    step: Number(form.elements.step.value),\n    amount: Number(form.elements.amount.value),\n  };\n\n  onMultipleFnCalls(data);\n}\n\nfunction onMultipleFnCalls({ delay, step, amount }) {\n  let positionArg;\n  let delayArg;\n\n  for (let i = 1; i <= amount; i += 1) {\n    positionArg = i;\n    delayArg = delay + step * (i - 1);\n\n    // console.log(positionArg, delayArg);\n\n    onCall(positionArg, delayArg);\n  }\n}\n\nfunction onCall(positionArg, delayArg) {\n  setTimeout(() => {\n    // console.log(positionArg, delayArg);\n    createPromise(positionArg, delayArg)\n      .then(({ position, delay }) => {\n        console.log(`This is a FULFILL of promise #${position} with ${delay}ms delay`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`This is a REJECT of promise #${position} with ${delay}ms delay`);\n      });\n  }, delayArg);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    }\n    // Reject\n    reject({ position, delay });\n  });\n}\n"]}